MbedOS 的在线Mbed编译环境实现使用浏览器进行Mbed 的云端开发。对于初学者而言这是十分方便的，免去了许多开发环境的安装和配置，而且能方便地实现软件更新和发布，分享。但是在线编译也有不足之处，就是有时候网络太不给力了。另外，源代码只能在Mbed 的社区中分享。不能发布到github。

如果不使用在线编译，你可以有两个选择：

1 在线编译环境中建立应用程序的代码，然后将程序export 成第三方编译工具的项目，比如keil uvision 项目。它会将转换好的项目自动下载下来。然后用keil 工具编译。在这过程中，好像没有遇到任何的麻烦。这样做几乎没有什么毛病，不过下载下来的程序包含了MBed OS 本身的源码。所以将近100多兆。如果你开发的程序比较多，或者希望保存在github中的话。占用的存储空间十分巨大。网络传输也很慢。

2 .使用Mbed CLI 工具

   Mbed CLI 是Arm Mbed OS的命令行工具，实现在本地计算机上Mbed 应用程序的开发。需要说明的是，Mbed CLI 并不是完全脱机操作的。有时也需要联机操作，比如会自动从Mbed 网站上下载Mbed OS的最新版本。Mbed CLI 可以管理多项目，也就是多个项目可以分享同一个Mbed OS 的源代码。如果你采用github 代码仓库的话，你只需要上传应用程序的代码。而不需要上传上百兆的Mbed OS.在github 上，同样可以实现代码分享和版本控制。而Mbed CLI 也可以将github 上的Mbed 应用程序下载下来，在本地编译。这样做大大节约的github 的空间和上下传代码的时间。

  我们在modular-2 应用程序的开发过程中，就采取了将代码保存在github 上，使用Mbed CLI实现程序编译的方法。下面我们就来谈谈Mbed CLI 的使用
